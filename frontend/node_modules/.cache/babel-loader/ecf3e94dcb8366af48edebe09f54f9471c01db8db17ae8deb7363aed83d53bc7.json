{"ast":null,"code":"var _jsxFileName = \"/Users/saydemir/Projects/fullstack_debug_test/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\n// App.jsx - Mock React frontend (with issues)\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [feedback, setFeedback] = useState([]);\n  const [rating, setRating] = useState(1);\n  const [sort, setSort] = useState('desc');\n  useEffect(async () => {\n    //ERROR2:added sort arg\n    fetch(`http://localhost5000/feedback?rating=${rating}&sort=${sort}`).then(res => res.json()).then(data => setFeedback(data)).catch(err => console.error('Fetch error:', err));\n  }, [rating]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Feedback Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setRating(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Ratings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"5\",\n        children: \"5 Stars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"1 Star\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [JSON.stringify(feedback), feedback.map((f, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [f.message, \" - \", f.rating, \" stars\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vtw0H+dKiIycaYV3HSPwiT6Hspw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","feedback","setFeedback","rating","setRating","sort","setSort","fetch","then","res","json","data","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","JSON","stringify","map","f","i","message","_c","$RefreshReg$"],"sources":["/Users/saydemir/Projects/fullstack_debug_test/frontend/src/App.jsx"],"sourcesContent":["\n// App.jsx - Mock React frontend (with issues)\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [feedback, setFeedback] = useState([]);\n  const [rating, setRating] = useState(1);\n  const [sort,setSort]=useState('desc');\n\n\n  useEffect(async () => {\n    //ERROR2:added sort arg\n    fetch(`http://localhost5000/feedback?rating=${rating}&sort=${sort}`)\n      .then(res => res.json())\n      .then(data => setFeedback(data))\n      .catch(err => console.error('Fetch error:', err));\n\n  }, [rating]);\n\n  return (\n    <div>\n      <h1>Feedback Dashboard</h1>\n      <select onChange={(e) => setRating(e.target.value)}>\n        <option value=\"\">All Ratings</option>\n        <option value=\"5\">5 Stars</option>\n        <option value=\"1\">1 Star</option>\n      </select> \n      <ul>\n        {JSON.stringify(feedback)}\n        {feedback.map((f, i) => (\n          <li key={i}>{f.message} - {f.rating} stars</li>\n        ))}\n      </ul>  \n    </div>\n  );  \n}\n\nexport default App;\n"],"mappings":";;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACU,IAAI,EAACC,OAAO,CAAC,GAACX,QAAQ,CAAC,MAAM,CAAC;EAGrCC,SAAS,CAAC,YAAY;IACpB;IACAW,KAAK,CAAC,wCAAwCJ,MAAM,SAASE,IAAI,EAAE,CAAC,CACjEG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIT,WAAW,CAACS,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,GAAG,CAAC,CAAC;EAErD,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZ,oBACEL,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BtB,OAAA;MAAQuB,QAAQ,EAAGC,CAAC,IAAKlB,SAAS,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAAR,QAAA,gBACjDlB,OAAA;QAAQ0B,KAAK,EAAC,EAAE;QAAAR,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrCtB,OAAA;QAAQ0B,KAAK,EAAC,GAAG;QAAAR,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClCtB,OAAA;QAAQ0B,KAAK,EAAC,GAAG;QAAAR,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACTtB,OAAA;MAAAkB,QAAA,GACGS,IAAI,CAACC,SAAS,CAACzB,QAAQ,CAAC,EACxBA,QAAQ,CAAC0B,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACjB/B,OAAA;QAAAkB,QAAA,GAAaY,CAAC,CAACE,OAAO,EAAC,KAAG,EAACF,CAAC,CAACzB,MAAM,EAAC,QAAM;MAAA,GAAjC0B,CAAC;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoC,CAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACpB,EAAA,CA/BQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}